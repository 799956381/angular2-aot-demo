/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/debug_context';
import * as import1 from './avatar.component';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/linker/element';
import * as import5 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/di/injector';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/change_detection';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from './avatar.component.css.shim';
const nodeDebugInfos_AvatarComponent_Host0:import0.StaticNodeDebugInfo[] = [new import0.StaticNodeDebugInfo([import1.AvatarComponent],import1.AvatarComponent,{})];
var renderType_AvatarComponent_Host:import2.RenderComponentType = (null as any);
class _View_AvatarComponent_Host0 extends import3.DebugAppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import4.AppElement;
  _AvatarComponent_0_4:import1.AvatarComponent;
  constructor(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import4.AppElement) {
    super(_View_AvatarComponent_Host0,renderType_AvatarComponent_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_AvatarComponent_Host0);
  }
  createInternal(rootSelector:string):import4.AppElement {
    this._el_0 = this.selectOrCreateHostElement('app-avatar',rootSelector,this.debug(0,0,0));
    this._appEl_0 = new import4.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_AvatarComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._AvatarComponent_0_4 = new import1.AvatarComponent();
    this._appEl_0.initComponent(this._AvatarComponent_0_4,[],compView_0);
    compView_0.create(this._AvatarComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.AvatarComponent) && (0 === requestNodeIndex))) { return this._AvatarComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._AvatarComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_AvatarComponent_Host0(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import4.AppElement):import3.AppView<any> {
  if ((renderType_AvatarComponent_Host === (null as any))) { (renderType_AvatarComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,[],{})); }
  return new _View_AvatarComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const AvatarComponentNgFactory:import10.ComponentFactory<import1.AvatarComponent> = new import10.ComponentFactory<import1.AvatarComponent>('app-avatar',viewFactory_AvatarComponent_Host0,import1.AvatarComponent);
const styles_AvatarComponent:any[] = [import11.styles];
const nodeDebugInfos_AvatarComponent0:import0.StaticNodeDebugInfo[] = [
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{}),
  new import0.StaticNodeDebugInfo([],(null as any),{})
]
;
var renderType_AvatarComponent:import2.RenderComponentType = (null as any);
class _View_AvatarComponent0 extends import3.DebugAppView<import1.AvatarComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _el_11:any;
  _text_12:any;
  _text_13:any;
  _text_14:any;
  _text_15:any;
  constructor(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import4.AppElement) {
    super(_View_AvatarComponent0,renderType_AvatarComponent,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_AvatarComponent0);
  }
  createInternal(rootSelector:string):import4.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',this.debug(0,0,0));
    this.renderer.setElementAttribute(this._el_0,'class','flip-container');
    this._text_1 = this.renderer.createText(this._el_0,'\n	',this.debug(1,0,28));
    this._el_2 = this.renderer.createElement(this._el_0,'div',this.debug(2,1,1));
    this.renderer.setElementAttribute(this._el_2,'class','flipper');
    this._text_3 = this.renderer.createText(this._el_2,'\n		',this.debug(3,1,22));
    this._el_4 = this.renderer.createElement(this._el_2,'div',this.debug(4,2,2));
    this.renderer.setElementAttribute(this._el_4,'class','front');
    this._text_5 = this.renderer.createText(this._el_4,'\n			',this.debug(5,2,21));
    this._el_6 = this.renderer.createElement(this._el_4,'img',this.debug(6,3,3));
    this.renderer.setElementAttribute(this._el_6,'alt','');
    this.renderer.setElementAttribute(this._el_6,'src','shai.png');
    this.renderer.setElementAttribute(this._el_6,'width','100%');
    this._text_7 = this.renderer.createText(this._el_4,'\n		',this.debug(7,3,45));
    this._text_8 = this.renderer.createText(this._el_2,'\n		',this.debug(8,4,8));
    this._el_9 = this.renderer.createElement(this._el_2,'div',this.debug(9,5,2));
    this.renderer.setElementAttribute(this._el_9,'class','back');
    this._text_10 = this.renderer.createText(this._el_9,'\n			',this.debug(10,5,20));
    this._el_11 = this.renderer.createElement(this._el_9,'img',this.debug(11,6,3));
    this.renderer.setElementAttribute(this._el_11,'alt','');
    this.renderer.setElementAttribute(this._el_11,'src','hirez.png');
    this.renderer.setElementAttribute(this._el_11,'width','100%');
    this._text_12 = this.renderer.createText(this._el_9,'\n		',this.debug(12,6,46));
    this._text_13 = this.renderer.createText(this._el_2,'\n	',this.debug(13,7,8));
    this._text_14 = this.renderer.createText(this._el_0,'\n',this.debug(14,8,7));
    this._text_15 = this.renderer.createText(parentRenderNode,'\n',this.debug(15,9,6));
    this.init([],[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._text_13,
      this._text_14,
      this._text_15
    ]
    ,[],[]);
    return (null as any);
  }
}
export function viewFactory_AvatarComponent0(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import4.AppElement):import3.AppView<import1.AvatarComponent> {
  if ((renderType_AvatarComponent === (null as any))) { (renderType_AvatarComponent = viewUtils.createRenderComponentType('/Users/wassimchegham/Sandbox/oss/angular2-aot-demo/app/avatar/avatar.component.html',0,import9.ViewEncapsulation.Emulated,styles_AvatarComponent,{})); }
  return new _View_AvatarComponent0(viewUtils,parentInjector,declarationEl);
}